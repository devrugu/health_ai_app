name: Flutter Build DEBUG APK

on:
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5' # Use the correct Flutter version for your project
          channel: 'stable'

      # --- SECRETS AND SIGNING ARE NO LONGER NEEDED FOR A DEBUG BUILD ---
      # We just need to create the files that the app expects to exist.

      - name: Create google-services.json
        # This step is still needed for Firebase to connect
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" | base64 --decode > ${{ github.workspace }}/android/app/google-services.json

      - name: Create .env file
        # This step is still needed for the Gemini API key
        run: echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" > .env

      - name: Get dependencies
        run: flutter pub get

      # --- THIS IS THE KEY CHANGE ---
      - name: Build DEBUG APK
        # We now run 'build apk' without the '--release' flag
        run: flutter build apk

      # --- THIS IS THE SECOND KEY CHANGE ---
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk # Renamed for clarity
          # The path for a debug APK is different
          path: build/app/outputs/flutter-apk/app-debug.apk
